# -*- coding: utf-8 -*-
"""FakeNewsDetection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1syGWROx4fyDWArdKoY2hrd3_hMAk8R6S
"""

!pip install scikit-learn==1.3.2
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import classification_report
import re
import string

data=pd.read_csv('/content/fake_and_real_news.csv')

data.info()

data.head(5)

data['label']=data['label'].map({'Fake':0,'Real':1})

data.head(4)

def wordopt(text):
    text = text.lower()
    text = re.sub('\[.*?\]', '', text)
    text = re.sub("\\W"," ",text)
    text = re.sub('https?://\S+|www\.\S+', '', text)
    text = re.sub('<.*?>+', '', text)
    text = re.sub('[%s]' % re.escape(string.punctuation), '', text)
    text = re.sub('\n', '', text)
    text = re.sub('\w*\d\w*', '', text)
    return text

data["Text"] = data["Text"].apply(wordopt)

data['Text'].head(3)

x=data['Text']
y=data['label']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25)

from sklearn.feature_extraction.text import TfidfVectorizer

vectorization = TfidfVectorizer()
xv_train = vectorization.fit_transform(x_train)
xv_test = vectorization.transform(x_test)

from sklearn.linear_model import LogisticRegression

LR = LogisticRegression()
LR.fit(xv_train,y_train)

pred_lr=LR.predict(xv_test)
LR.score(xv_test, y_test)

from sklearn.ensemble import GradientBoostingClassifier

GBC = GradientBoostingClassifier(random_state=0)
GBC.fit(xv_train, y_train)

pred_gbc = GBC.predict(xv_test)

print(classification_report(y_test, pred_gbc))







import pickle

# Save the model
with open('GBC1.pkl', 'wb') as f:
    pickle.dump(GBC, f)

# Load the model

with open('vectorizer.pkl', 'wb') as f:
    pickle.dump(vectorization, f)

